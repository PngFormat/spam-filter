{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SiDR\\\\WebstormProjects\\\\spam-app\\\\spam-filter\\\\src\\\\components\\\\ChatRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport RegistrationForm from \"./RegistrationForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  const socket = io('http://localhost:3001', {\n    transports: ['websocket']\n  });\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/messages').then(response => setMessages(response.data)).catch(error => console.error('Error fetching initial messages:', error));\n    socket.on('newMessage', newMessage => {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n  const loginUser = async () => {\n    try {\n      const users = await fetch('/api/users').then(response => response.json());\n      console.log('List of users:', users);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const handleRegister = async userData => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/users', userData);\n      const newUser = response.data;\n      setCurrentUser(newUser);\n    } catch (error) {\n      console.error('Error creating user:', error);\n    }\n  };\n  const sendMessage = message => {\n    socket.emit('sendMessage', {\n      text: message\n    });\n  };\n  socket.on('newMessage', message => {\n    console.log('New message:', message);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), !currentUser && /*#__PURE__*/_jsxDEV(RegistrationForm, {\n      onRegister: handleRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.username, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), message.text]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"cjJb2xvh1U4XU62t8DqnPftNIUQ=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","RegistrationForm","jsxDEV","_jsxDEV","ChatRoom","_s","messages","setMessages","newMessage","setNewMessage","currentUser","setCurrentUser","socket","transports","get","then","response","data","catch","error","console","on","prevMessages","disconnect","loginUser","users","fetch","json","log","handleRegister","userData","post","newUser","sendMessage","message","emit","text","children","fileName","_jsxFileName","lineNumber","columnNumber","onRegister","map","username","id","type","placeholder","value","onChange","e","target","onClick","handleSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/SiDR/WebstormProjects/spam-app/spam-filter/src/components/ChatRoom.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport RegistrationForm from \"./RegistrationForm\";\r\n\r\ninterface Message {\r\n    id: number;\r\n    text: string;\r\n    username: string;\r\n}\r\n\r\ninterface User {\r\n    id: number;\r\n    name: string;\r\n    nickname: string;\r\n}\r\n\r\n\r\nconst ChatRoom: React.FC = () => {\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [newMessage, setNewMessage] = useState<string>('');\r\n    const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n    const socket = io('http://localhost:3001', { transports: ['websocket'] });\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/api/messages')\r\n            .then(response => setMessages(response.data))\r\n            .catch(error => console.error('Error fetching initial messages:', error));\r\n\r\n        socket.on('newMessage', (newMessage) => {\r\n            setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, [socket]);\r\n\r\n    const loginUser = async () => {\r\n        try {\r\n            const users = await fetch('/api/users').then((response) => response.json());\r\n            console.log('List of users:', users);\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    };\r\n\r\n    const handleRegister = async (userData) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/api/users', userData);\r\n            const newUser = response.data;\r\n            setCurrentUser(newUser);\r\n        } catch (error) {\r\n            console.error('Error creating user:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const sendMessage = (message: any) => {\r\n        socket.emit('sendMessage', { text: message });\r\n    };\r\n\r\n\r\n    socket.on('newMessage', (message) => {\r\n        console.log('New message:', message);\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Chat Room</h2>\r\n            {!currentUser && <RegistrationForm onRegister={handleRegister} />}\r\n            {/*{currentUser && (*/}\r\n            {/*    <div>*/}\r\n            {/*        <p>Welcome, {currentUser.name} ({currentUser.nickname})!</p>*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n            <ul>\r\n                {messages.map(message => (\r\n                    <li key={message.id}>\r\n                        <strong>{message.username}: </strong>\r\n                        {message.text}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                />\r\n                <button onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}