{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SiDR\\\\WebstormProjects\\\\spam-app\\\\spam-filter\\\\src\\\\components\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, TextField, Typography } from '@mui/material';\nimport styles from '../styles/Home.module.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  currentUser\n}) => {\n  _s();\n  const classes = styles;\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) {\n      console.warn('Message text is empty');\n      return;\n    }\n    if (currentUser) {\n      axios.post('http://localhost:3001/api/messages', {\n        text: newMessage,\n        username: currentUser.nickname\n      }).then(response => {\n        setMessages(prevMessages => [...prevMessages, response.data]);\n        setNewMessage('');\n      }).catch(error => {\n        console.error('Error sending message:', error);\n        alert('Failed to send message. Please try again later.');\n      });\n    } else {\n      alert('You need to log in first.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      paragraph: true,\n      children: [\"Welcome, \", currentUser.id, \" (\", currentUser.nickname, \")!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.messageList,\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.messageItem,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.username, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), message.text]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"t/bJtz8T5owTIUv5OHFKDlj9m7s=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","Button","TextField","Typography","styles","axios","jsxDEV","_jsxDEV","Chat","currentUser","_s","classes","messages","setMessages","newMessage","setNewMessage","handleSendMessage","trim","console","warn","post","text","username","nickname","then","response","prevMessages","data","catch","error","alert","children","variant","paragraph","id","fileName","_jsxFileName","lineNumber","columnNumber","className","messageList","map","message","messageItem","inputContainer","input","type","placeholder","value","onChange","e","target","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SiDR/WebstormProjects/spam-app/spam-filter/src/components/Chat.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, TextField, Typography } from '@mui/material';\r\nimport styles from '../styles/Home.module.css';\r\nimport axios from 'axios';\r\n\r\ninterface Message {\r\n    id: number;\r\n    text: string;\r\n    username: string;\r\n}\r\n\r\ninterface User {\r\n    id: number;\r\n    name: string;\r\n    nickname: string;\r\n}\r\n\r\ninterface ChatProps {\r\n    currentUser: User;\r\n}\r\n\r\nconst Chat: React.FC<ChatProps> = ({ currentUser }) => {\r\n    const classes = styles;\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [newMessage, setNewMessage] = useState<string>('');\r\n\r\n    const handleSendMessage = () => {\r\n        if (!newMessage.trim()) {\r\n            console.warn('Message text is empty');\r\n            return;\r\n        }\r\n\r\n        if (currentUser) {\r\n            axios.post('http://localhost:3001/api/messages', { text: newMessage, username: currentUser.nickname })\r\n                .then(response => {\r\n                    setMessages((prevMessages) => [...prevMessages, response.data]);\r\n                    setNewMessage('');\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error sending message:', error);\r\n                    alert('Failed to send message. Please try again later.');\r\n                });\r\n        } else {\r\n            alert('You need to log in first.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"body1\" paragraph>\r\n                Welcome, {currentUser.id} ({currentUser.nickname})!\r\n            </Typography>\r\n\r\n            <ul className={classes.messageList}>\r\n                {messages.map((message) => (\r\n                    <li key={message.id} className={classes.messageItem}>\r\n                        <strong>{message.username}: </strong>\r\n                        {message.text}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <div className={classes.inputContainer}>\r\n                <TextField\r\n                    className={classes.input}\r\n                    type=\"text\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSendMessage}>\r\n                    Send\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}