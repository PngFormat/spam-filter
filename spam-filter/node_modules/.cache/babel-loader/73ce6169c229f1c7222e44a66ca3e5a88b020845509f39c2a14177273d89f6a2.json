{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SiDR\\\\WebstormProjects\\\\spam-app\\\\spam-filter\\\\src\\\\components\\\\ChatRoom.tsx\",\n  _s = $RefreshSig$();\n// ChatRoom.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport AuthForm from \"./AuthForm\";\nimport { Button, Paper, TextField, Typography } from \"@mui/material\";\nimport styles from '../styles/Home.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const classes = styles;\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    loginUser();\n  }, []);\n  const loginUser = async () => {\n    try {\n      const users = await fetch('/api/users').then(response => response.json());\n      console.log('List of users:', users);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const handleRegister = useCallback(userData => {\n    axios.post('http://localhost:3001/api/register', userData).then(response => {\n      const newUser = response.data.message;\n      console.log('New user:', newUser);\n      setCurrentUser(newUser);\n      const {\n        name\n      } = newUser || {};\n      console.log(`Welcome, ${name}!`);\n    }).catch(error => {\n      console.error('Error creating user:', error);\n    });\n  }, [setCurrentUser]);\n  const handleLogin = useCallback((userData, token) => {\n    axios.post('http://localhost:3001/api/login', userData).then(response => {\n      const loggedInUser = response.data.user;\n      console.log('Logged in user:', loggedInUser);\n      setCurrentUser(loggedInUser);\n      console.log('Current user:', currentUser);\n    }).catch(error => {\n      console.error('Error logging in:', error);\n    });\n  }, [setCurrentUser, currentUser]);\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) {\n      console.warn('Message text is empty');\n      return;\n    }\n    if (currentUser) {\n      axios.post('http://localhost:3001/api/messages', {\n        text: newMessage,\n        username: currentUser.nickname\n      }).then(response => {\n        setMessages(prevMessages => [...prevMessages, response.data]);\n        setNewMessage('');\n      }).catch(error => {\n        console.error('Error sending message:', error);\n        alert('Failed to send message. Please try again later.');\n      });\n    } else {\n      alert('You need to log in first.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: classes.welcomeMessage,\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        children: [\"Welcome, \", currentUser.name, \" (\", currentUser.nickname, \")!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.messageList,\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.messageItem,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.username, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this), message.text]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(AuthForm, {\n      onLogin: (userData, token) => handleLogin(userData, token)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"oen9eJEEoUwDpqRGwkKKNMJD3VU=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","AuthForm","Button","Paper","TextField","Typography","styles","jsxDEV","_jsxDEV","ChatRoom","_s","classes","messages","setMessages","newMessage","setNewMessage","currentUser","setCurrentUser","loginUser","users","fetch","then","response","json","console","log","error","handleRegister","userData","post","newUser","data","message","name","catch","handleLogin","token","loggedInUser","user","handleSendMessage","trim","warn","text","username","nickname","prevMessages","alert","className","root","elevation","children","variant","welcomeMessage","fileName","_jsxFileName","lineNumber","columnNumber","paragraph","messageList","map","messageItem","id","inputContainer","input","type","placeholder","value","onChange","e","target","color","onClick","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/SiDR/WebstormProjects/spam-app/spam-filter/src/components/ChatRoom.tsx"],"sourcesContent":["// ChatRoom.tsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport AuthForm from \"./AuthForm\";\r\nimport { Button, Paper, TextField, Typography } from \"@mui/material\";\r\nimport styles from '../styles/Home.module.css';\r\n\r\ninterface Message {\r\n    id: number;\r\n    text: string;\r\n    username: string;\r\n}\r\n\r\ninterface User {\r\n    id: number;\r\n    name: string;\r\n    nickname: string;\r\n}\r\n\r\nconst ChatRoom: React.FC = () => {\r\n    const classes = styles;\r\n\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [newMessage, setNewMessage] = useState<string>('');\r\n    const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n\r\n    useEffect(() => {\r\n        loginUser();\r\n    }, []);\r\n\r\n    const loginUser = async () => {\r\n        try {\r\n            const users = await fetch('/api/users').then((response) => response.json());\r\n            console.log('List of users:', users);\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    };\r\n\r\n    const handleRegister = useCallback((userData: { username: string; email: string; password: string }) => {\r\n        axios\r\n            .post('http://localhost:3001/api/register', userData)\r\n            .then((response) => {\r\n                const newUser = response.data.message;\r\n                console.log('New user:', newUser);\r\n                setCurrentUser(newUser);\r\n                const { name } = newUser || {};\r\n                console.log(`Welcome, ${name}!`);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error creating user:', error);\r\n            });\r\n    }, [setCurrentUser]);\r\n\r\n    const handleLogin = useCallback((userData: { username: string; password: string }, token:string) => {\r\n        axios\r\n            .post('http://localhost:3001/api/login', userData)\r\n            .then((response) => {\r\n                const loggedInUser = response.data.user;\r\n                console.log('Logged in user:', loggedInUser);\r\n                setCurrentUser(loggedInUser);\r\n                console.log('Current user:', currentUser);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error logging in:', error);\r\n            });\r\n    }, [setCurrentUser, currentUser]);\r\n\r\n    const handleSendMessage = () => {\r\n        if (!newMessage.trim()) {\r\n            console.warn('Message text is empty');\r\n            return;\r\n        }\r\n\r\n        if (currentUser) {\r\n            axios.post('http://localhost:3001/api/messages', { text: newMessage, username: currentUser.nickname })\r\n                .then(response => {\r\n                    setMessages((prevMessages) => [...prevMessages, response.data]);\r\n                    setNewMessage('');\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error sending message:', error);\r\n                    alert('Failed to send message. Please try again later.');\r\n                });\r\n        } else {\r\n            alert('You need to log in first.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.root} elevation={3}>\r\n            <Typography variant=\"h5\" className={classes.welcomeMessage}>\r\n                Chat Room\r\n            </Typography>\r\n\r\n            {currentUser ? (\r\n                <div>\r\n                    <Typography variant=\"body1\" paragraph>\r\n                        Welcome, {currentUser.name} ({currentUser.nickname})!\r\n                    </Typography>\r\n\r\n                    <ul className={classes.messageList}>\r\n                        {messages.map((message) => (\r\n                            <li key={message.id} className={classes.messageItem}>\r\n                                <strong>{message.username}: </strong>\r\n                                {message.text}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <div className={classes.inputContainer}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            type=\"text\"\r\n                            placeholder=\"Type your message...\"\r\n                            value={newMessage}\r\n                            onChange={(e) => setNewMessage(e.target.value)}\r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleSendMessage}>\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <AuthForm onLogin={(userData, token) => handleLogin(userData, token)} />\r\n            )}\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}