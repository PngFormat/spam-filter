{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\Desktop\\\\spam-filter\\\\spam-filter\\\\src\\\\components\\\\ChatRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport RegistrationForm from \"./RegistrationForm\";\nimport { Button, Paper, TextField, Typography } from \"@mui/material\";\nimport styles from '../styles/Home.module.css';\nimport LoginForm from \"./AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const classes = styles;\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  const [name, setName] = useState('');\n  const [showRegistrationForm, setShowRegistrationForm] = useState(false);\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  useEffect(() => {\n    loginUser();\n    const authToken = localStorage.getItem('authToken');\n    if (authToken) {\n      axios.get('http://localhost:3001/api/user', {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(response => {\n        setCurrentUser(response.data.user);\n      }).catch(error => {\n        console.error('Error fetching user data:', error);\n      });\n    }\n  }, []);\n  const loginUser = async () => {\n    try {\n      const users = await fetch('/api/users').then(response => response.json());\n      console.log('List of users:', users);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const handleRegister = useCallback(userData => {\n    setShowRegistrationForm(false);\n    axios.post('http://localhost:3001/api/register', userData).then(response => {\n      const newUser = response.data.message;\n      console.log('New user:', newUser);\n      setCurrentUser(newUser);\n      const {\n        name\n      } = newUser || {};\n      setName(name);\n      console.log(`Welcome, ${name}!`);\n    }).catch(error => {\n      console.error('Error creating user:', error);\n    });\n  }, [setCurrentUser, setName]);\n  const handleLoginSuccess = useCallback(authToken => {\n    setShowLoginForm(false);\n    axios.get('http://localhost:3001/api/user', {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      const newUser = response.data.message;\n      setCurrentUser(newUser);\n      localStorage.setItem('authToken', authToken);\n      const {\n        name\n      } = newUser || {};\n      setName(name);\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n    });\n  }, [setCurrentUser, setName]);\n  const handleShowRegistrationForm = () => {\n    setShowRegistrationForm(true);\n    setShowLoginForm(false);\n  };\n  const handleShowLoginForm = () => {\n    setShowLoginForm(true);\n    setShowRegistrationForm(false);\n  };\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) {\n      console.warn('Message text is empty');\n      return;\n    }\n    if (currentUser) {\n      axios.post('http://localhost:3001/api/messages', {\n        text: newMessage,\n        username: currentUser.nickname\n      }).then(response => {\n        setMessages(prevMessages => [...prevMessages, response.data]);\n        setNewMessage('');\n      }).catch(error => {\n        console.error('Error sending message:', error);\n        alert('Failed to send message. Please try again later.');\n      });\n    } else {\n      alert('You need to log in first.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: classes.welcomeMessage,\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), !currentUser && !showRegistrationForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleShowRegistrationForm,\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleShowLoginForm,\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this), showRegistrationForm && /*#__PURE__*/_jsxDEV(RegistrationForm, {\n      onRegister: userData => handleRegister({\n        username: userData.name,\n        email: userData.nickname,\n        password: userData.password\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), showLoginForm && /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this), currentUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        children: [\"Welcome, \", currentUser.id, \" (\", currentUser.nickname, \")!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.messageList,\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.messageItem,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.username, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), message.text]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"hSa6PnUrUhsU1NhWUK3/LYVDIUk=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","RegistrationForm","Button","Paper","TextField","Typography","styles","LoginForm","jsxDEV","_jsxDEV","ChatRoom","_s","classes","messages","setMessages","newMessage","setNewMessage","currentUser","setCurrentUser","name","setName","showRegistrationForm","setShowRegistrationForm","showLoginForm","setShowLoginForm","loginUser","authToken","localStorage","getItem","get","headers","Authorization","then","response","data","user","catch","error","console","users","fetch","json","log","handleRegister","userData","post","newUser","message","handleLoginSuccess","setItem","handleShowRegistrationForm","handleShowLoginForm","handleSendMessage","trim","warn","text","username","nickname","prevMessages","alert","className","root","elevation","children","variant","welcomeMessage","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onRegister","email","password","onLogin","paragraph","id","messageList","map","messageItem","inputContainer","input","type","placeholder","value","onChange","e","target","color","_c","$RefreshReg$"],"sources":["C:/Users/Пользователь/Desktop/spam-filter/spam-filter/src/components/ChatRoom.tsx"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport RegistrationForm from \"./RegistrationForm\";\r\nimport {Button,Paper, TextField, Theme, Typography} from \"@mui/material\";\r\nimport styles from '../styles/Home.module.css'\r\nimport LoginForm from \"./AuthForm\";\r\n\r\n\r\n\r\ninterface Message {\r\n    id: number;\r\n    text: string;\r\n    username: string;\r\n}\r\n\r\ninterface User {\r\n    id: number;\r\n    name: string;\r\n    nickname: string;\r\n}\r\n\r\n\r\nconst ChatRoom: React.FC = () => {\r\n    const classes = styles;\r\n\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [newMessage, setNewMessage] = useState<string>('');\r\n    const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n    const [name, setName] = useState<string>('');\r\n    const [showRegistrationForm, setShowRegistrationForm] = useState<boolean>(false);\r\n    const [showLoginForm, setShowLoginForm] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        loginUser();\r\n        const authToken = localStorage.getItem('authToken');\r\n        if (authToken) {\r\n            axios.get('http://localhost:3001/api/user', {\r\n                headers: {\r\n                    Authorization: `Bearer ${authToken}`\r\n                }\r\n            }).then(response => {\r\n                setCurrentUser(response.data.user);\r\n            }).catch(error => {\r\n                console.error('Error fetching user data:', error);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const loginUser = async () => {\r\n        try {\r\n            const users = await fetch('/api/users').then((response) => response.json());\r\n            console.log('List of users:', users);\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    };\r\n\r\n    const handleRegister = useCallback((userData: { username: string; email: string; password: string }) => {\r\n        setShowRegistrationForm(false)\r\n        axios.post('http://localhost:3001/api/register', userData)\r\n            .then((response) => {\r\n                const newUser = response.data.message;\r\n                console.log('New user:', newUser);\r\n                setCurrentUser(newUser);\r\n                const { name } = newUser || {};\r\n                setName(name);\r\n                console.log(`Welcome, ${name}!`);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error creating user:', error);\r\n            });\r\n    }, [setCurrentUser, setName]);\r\n\r\n    const handleLoginSuccess = useCallback((authToken: string) => {\r\n        setShowLoginForm(false);\r\n        axios.get('http://localhost:3001/api/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${authToken}`\r\n\r\n            }\r\n\r\n\r\n\r\n        }).then(response => {\r\n            const newUser = response.data.message;\r\n            setCurrentUser(newUser);\r\n            localStorage.setItem('authToken', authToken);\r\n            const { name } = newUser || {};\r\n            setName(name);\r\n        }).catch(error => {\r\n            console.error('Error fetching user data:', error);\r\n        });\r\n    }, [setCurrentUser,setName]);\r\n\r\n    const handleShowRegistrationForm = () => {\r\n        setShowRegistrationForm(true);\r\n        setShowLoginForm(false);\r\n    };\r\n\r\n    const handleShowLoginForm = () => {\r\n        setShowLoginForm(true);\r\n        setShowRegistrationForm(false);\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        if (!newMessage.trim()) {\r\n            console.warn('Message text is empty');\r\n            return;\r\n        }\r\n\r\n        if (currentUser) {\r\n            axios.post('http://localhost:3001/api/messages', { text: newMessage, username: currentUser.nickname })\r\n                .then(response => {\r\n                    setMessages((prevMessages) => [...prevMessages, response.data]);\r\n                    setNewMessage('');\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error sending message:', error);\r\n                    alert('Failed to send message. Please try again later.');\r\n                });\r\n        } else {\r\n            alert('You need to log in first.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.root} elevation={3}>\r\n            <Typography variant=\"h5\" className={classes.welcomeMessage}>\r\n                Chat Room\r\n            </Typography>\r\n            {!currentUser && !showRegistrationForm && (\r\n                <div>\r\n                    <Button onClick={handleShowRegistrationForm}>Sign up</Button>\r\n                    <Button onClick={handleShowLoginForm}>Sign in</Button>\r\n                </div>\r\n            )}\r\n\r\n            {showRegistrationForm && (\r\n                <RegistrationForm\r\n                    onRegister={(userData) => handleRegister({\r\n                        username: userData.name,\r\n                        email: userData.nickname,\r\n                        password: userData.password\r\n                    })}\r\n                />\r\n            )}\r\n            {showLoginForm && (\r\n                <LoginForm onLogin={handleLoginSuccess} />\r\n            )}\r\n\r\n            {currentUser && (\r\n                <div>\r\n                    <Typography variant=\"body1\" paragraph>\r\n                        Welcome, {currentUser.id} ({currentUser.nickname})!\r\n                    </Typography>\r\n\r\n                    <ul className={classes.messageList}>\r\n                        {messages.map((message) => (\r\n                            <li key={message.id} className={classes.messageItem}>\r\n                                <strong>{message.username}: </strong>\r\n                                {message.text}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <div className={classes.inputContainer}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            type=\"text\"\r\n                            placeholder=\"Type your message...\"\r\n                            value={newMessage}\r\n                            onChange={(e) => setNewMessage(e.target.value)}\r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleSendMessage}>\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}