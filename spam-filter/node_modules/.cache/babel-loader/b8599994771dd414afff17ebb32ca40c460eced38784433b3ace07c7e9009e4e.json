{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SiDR\\\\WebstormProjects\\\\spam-app\\\\spam-filter\\\\src\\\\components\\\\ChatRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport RegistrationForm from './RegistrationForm';\nimport LoginForm from \"./AuthForm\";\nimport { Button, Paper, TextField, Typography } from '@mui/material';\nimport styles from '../styles/Home.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const classes = styles;\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  const [name, setName] = useState('');\n  const socket = io('http://localhost:3001', {\n    transports: ['websocket'],\n    reconnection: true,\n    reconnectionAttempts: 3\n  });\n  useEffect(() => {\n    loginUser();\n  }, []);\n  const loginUser = async () => {\n    try {\n      const users = await fetch('/api/users').then(response => response.json());\n      console.log('List of users:', users);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const handleRegister = useCallback(userData => {\n    axios.post('http://localhost:3001/api/register', userData).then(response => {\n      const newUser = response.data.message;\n      console.log('New user:', newUser);\n      setCurrentUser(newUser);\n      const {\n        name\n      } = newUser || {};\n      setName(name);\n      console.log(`Welcome, ${name}!`);\n    }).catch(error => {\n      console.error('Error creating user:', error);\n    });\n  }, [setCurrentUser, setName]);\n  const handleLogin = useCallback(userData => {\n    axios.post('http://localhost:3001/api/login', userData).then(response => {\n      const loggedInUser = response.data.user;\n      console.log('Logged in user:', loggedInUser);\n      setCurrentUser(loggedInUser);\n      console.log('Current user:', currentUser);\n    }).catch(error => {\n      console.error('Error logging in:', error);\n    });\n  }, [setCurrentUser, currentUser]);\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) {\n      console.warn('Message text is empty');\n      return;\n    }\n    if (currentUser) {\n      axios.post('http://localhost:3001/api/messages', {\n        text: newMessage,\n        username: currentUser.nickname\n      }).then(response => {\n        setMessages(prevMessages => [...prevMessages, response.data]);\n        setNewMessage('');\n      }).catch(error => {\n        console.error('Error sending message:', error);\n        alert('Failed to send message. Please try again later.');\n      });\n    } else {\n      alert('You need to log in first.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: classes.welcomeMessage,\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        children: [\"Welcome, \", currentUser.name, \" (\", currentUser.nickname, \")!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.messageList,\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.messageItem,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.username, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this), message.text]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(RegistrationForm, {\n        onRegister: userData => handleRegister({\n          username: userData.name,\n          email: userData.nickname,\n          password: userData.password\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        onLogin: userData => handleLogin({\n          username: userData.name,\n          email: userData.nickname,\n          password: userData.password\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), \" // Render LoginForm\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"oGxEMJQDHTgVy3LZS22qs6NiSKo=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","io","RegistrationForm","LoginForm","Button","Paper","TextField","Typography","styles","jsxDEV","_jsxDEV","ChatRoom","_s","classes","messages","setMessages","newMessage","setNewMessage","currentUser","setCurrentUser","name","setName","socket","transports","reconnection","reconnectionAttempts","loginUser","users","fetch","then","response","json","console","log","error","handleRegister","userData","post","newUser","data","message","catch","handleLogin","loggedInUser","user","handleSendMessage","trim","warn","text","username","nickname","prevMessages","alert","className","root","elevation","children","variant","welcomeMessage","fileName","_jsxFileName","lineNumber","columnNumber","paragraph","messageList","map","messageItem","id","inputContainer","input","type","placeholder","value","onChange","e","target","color","onClick","onRegister","email","password","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/SiDR/WebstormProjects/spam-app/spam-filter/src/components/ChatRoom.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport RegistrationForm from './RegistrationForm';\r\nimport LoginForm from \"./AuthForm\";\r\nimport { Button, Paper, TextField, Typography } from '@mui/material';\r\nimport styles from '../styles/Home.module.css';\r\n\r\ninterface Message {\r\n    id: number;\r\n    text: string;\r\n    username: string;\r\n}\r\n\r\ninterface User {\r\n    id: number;\r\n    name: string;\r\n    nickname: string;\r\n}\r\n\r\nconst ChatRoom: React.FC = () => {\r\n    const classes = styles;\r\n\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [newMessage, setNewMessage] = useState<string>('');\r\n    const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n    const [name, setName] = useState<string>('');\r\n    const socket = io('http://localhost:3001', {\r\n        transports: ['websocket'],\r\n        reconnection: true,\r\n        reconnectionAttempts: 3,\r\n    });\r\n\r\n    useEffect(() => {\r\n        loginUser();\r\n    }, []);\r\n\r\n    const loginUser = async () => {\r\n        try {\r\n            const users = await fetch('/api/users').then((response) => response.json());\r\n            console.log('List of users:', users);\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    };\r\n\r\n    const handleRegister = useCallback(\r\n        (userData: { username: string; email: string; password: string }) => {\r\n            axios\r\n                .post('http://localhost:3001/api/register', userData)\r\n                .then((response) => {\r\n                    const newUser = response.data.message;\r\n                    console.log('New user:', newUser);\r\n                    setCurrentUser(newUser);\r\n                    const { name } = newUser || {};\r\n                    setName(name);\r\n                    console.log(`Welcome, ${name}!`);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error creating user:', error);\r\n                });\r\n        },\r\n        [setCurrentUser, setName]\r\n    );\r\n\r\n    const handleLogin = useCallback(\r\n        (userData: { username: string; email: string; password: string }) => {\r\n            axios\r\n                .post('http://localhost:3001/api/login', userData)\r\n                .then((response) => {\r\n                    const loggedInUser = response.data.user;\r\n                    console.log('Logged in user:', loggedInUser);\r\n                    setCurrentUser(loggedInUser);\r\n                    console.log('Current user:', currentUser);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error logging in:', error);\r\n                });\r\n        },\r\n        [setCurrentUser, currentUser]\r\n    );\r\n\r\n    const handleSendMessage = () => {\r\n        if (!newMessage.trim()) {\r\n            console.warn('Message text is empty');\r\n            return;\r\n        }\r\n\r\n        if (currentUser) {\r\n            axios\r\n                .post('http://localhost:3001/api/messages', { text: newMessage, username: currentUser.nickname })\r\n                .then((response) => {\r\n                    setMessages((prevMessages) => [...prevMessages, response.data]);\r\n                    setNewMessage('');\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error sending message:', error);\r\n                    alert('Failed to send message. Please try again later.');\r\n                });\r\n        } else {\r\n            alert('You need to log in first.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.root} elevation={3}>\r\n            <Typography variant=\"h5\" className={classes.welcomeMessage}>\r\n                Chat Room\r\n            </Typography>\r\n\r\n            {currentUser ? (\r\n                <div>\r\n                    <Typography variant=\"body1\" paragraph>\r\n                        Welcome, {currentUser.name} ({currentUser.nickname})!\r\n                    </Typography>\r\n\r\n                    <ul className={classes.messageList}>\r\n                        {messages.map((message) => (\r\n                            <li key={message.id} className={classes.messageItem}>\r\n                                <strong>{message.username}: </strong>\r\n                                {message.text}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <div className={classes.inputContainer}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            type=\"text\"\r\n                            placeholder=\"Type your message...\"\r\n                            value={newMessage}\r\n                            onChange={(e) => setNewMessage(e.target.value)}\r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleSendMessage}>\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <RegistrationForm onRegister={(userData) => handleRegister({ username: userData.name, email: userData.nickname, password: userData.password })} />\r\n                    <LoginForm onLogin={(userData) => handleLogin({ username: userData.name, email: userData.nickname, password: userData.password })} /> // Render LoginForm\r\n                </div>\r\n            )}\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}