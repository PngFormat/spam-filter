{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\Desktop\\\\spam-filter\\\\spam-filter\\\\src\\\\components\\\\UserList.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { List, ListItem, ListItemText, Paper, Typography } from '@mui/material';\n//\n//\n//\n// const UserList: React.FC<{ users: any[] }> = ({ users }) => {\n//     return (\n//         <Paper elevation={3} style={{ padding: 16, marginTop: 16 }}>\n//             <Typography variant=\"h6\" gutterBottom>\n//                 Registered Users\n//             </Typography>\n//             <List>\n//                 {users.map((user) => (\n//                     <ListItem key={user._id}>\n//                         <ListItemText primary={`Nickname ${user.username}`} secondary={`@Email ${user.email}`} />\n//                     </ListItem>\n//                 ))}\n//             </List>\n//         </Paper>\n//     );\n// };\n//\n// export default UserList;\nimport React, { useEffect, useState } from 'react';\nimport { List, ListItem, ListItemText, Paper, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // Делаем запрос к вашему серверу, чтобы получить список пользователей из MongoDB\n    axios.get('/api/users') // Предположим, что ваш сервер обрабатывает запросы по адресу /api/users\n    .then(response => {\n      setUsers(response.data); // Устанавливаем полученные данные о пользователях в состояние\n    }).catch(error => {\n      console.error('Error fetching users:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    style: {\n      padding: 16,\n      marginTop: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Registered Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `Nickname ${user.username}`,\n          secondary: `@Email ${user.email}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(UserList, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","List","ListItem","ListItemText","Paper","Typography","axios","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","get","then","response","data","catch","error","console","elevation","style","padding","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","user","primary","username","secondary","email","_id","_c","$RefreshReg$"],"sources":["C:/Users/Пользователь/Desktop/spam-filter/spam-filter/src/components/UserList.tsx"],"sourcesContent":["// import React from 'react';\r\n// import { List, ListItem, ListItemText, Paper, Typography } from '@mui/material';\r\n//\r\n//\r\n//\r\n// const UserList: React.FC<{ users: any[] }> = ({ users }) => {\r\n//     return (\r\n//         <Paper elevation={3} style={{ padding: 16, marginTop: 16 }}>\r\n//             <Typography variant=\"h6\" gutterBottom>\r\n//                 Registered Users\r\n//             </Typography>\r\n//             <List>\r\n//                 {users.map((user) => (\r\n//                     <ListItem key={user._id}>\r\n//                         <ListItemText primary={`Nickname ${user.username}`} secondary={`@Email ${user.email}`} />\r\n//                     </ListItem>\r\n//                 ))}\r\n//             </List>\r\n//         </Paper>\r\n//     );\r\n// };\r\n//\r\n// export default UserList;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { List, ListItem, ListItemText, Paper, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst UserList: React.FC = () => {\r\n    const [users, setUsers] = useState<any[]>([]);\r\n\r\n    useEffect(() => {\r\n        // Делаем запрос к вашему серверу, чтобы получить список пользователей из MongoDB\r\n        axios.get('/api/users') // Предположим, что ваш сервер обрабатывает запросы по адресу /api/users\r\n            .then(response => {\r\n                setUsers(response.data); // Устанавливаем полученные данные о пользователях в состояние\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching users:', error);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ padding: 16, marginTop: 16 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Registered Users\r\n            </Typography>\r\n            <List>\r\n                {users.map((user) => (\r\n                    <ListItem key={user._id}>\r\n                        <ListItemText primary={`Nickname ${user.username}`} secondary={`@Email ${user.email}`} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAQ,EAAE,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACZ;IACAO,KAAK,CAACO,GAAG,CAAC,YAAY,CAAC,CAAC;IAAA,CACnBC,IAAI,CAACC,QAAQ,IAAI;MACdH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA,CAACJ,KAAK;IAACgB,SAAS,EAAE,CAAE;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAE;IAAAC,QAAA,gBACvDhB,OAAA,CAACH,UAAU;MAACoB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbtB,OAAA,CAACP,IAAI;MAAAuB,QAAA,EACAb,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBACZxB,OAAA,CAACN,QAAQ;QAAAsB,QAAA,eACLhB,OAAA,CAACL,YAAY;UAAC8B,OAAO,EAAG,YAAWD,IAAI,CAACE,QAAS,EAAE;UAACC,SAAS,EAAG,UAASH,IAAI,CAACI,KAAM;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD9EE,IAAI,CAACK,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEhB,CAAC;AAACpB,EAAA,CA5BID,QAAkB;AAAA6B,EAAA,GAAlB7B,QAAkB;AA8BxB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}