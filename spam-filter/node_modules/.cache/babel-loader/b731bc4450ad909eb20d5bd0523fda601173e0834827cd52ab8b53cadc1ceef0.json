{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SiDR\\\\WebstormProjects\\\\spam-app\\\\spam-filter\\\\src\\\\components\\\\AuthForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onLogin\n}) => {\n  _s();\n  const [userData, setUserData] = useState({\n    username: '',\n    password: ''\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n  };\n  const handleLogin = async () => {\n    try {\n      console.log('Sending login request with user data:', userData);\n      const response = await fetch('http://localhost:3001/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      console.log('Response status:', response.status);\n      const data = await response.json();\n      console.log('Response data:', data);\n      const authToken = data.authToken;\n      console.log('Received authToken:', authToken);\n      if (onLogin) {\n        console.log('Calling onLogin handler with authToken:', authToken);\n        onLogin(authToken);\n      }\n    } catch (error) {\n      console.error('Authentication error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: userData.username,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: userData.password,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"Q8+91dVgCEkahR8JQ8O4Qe+huZ0=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginForm","onLogin","_s","userData","setUserData","username","password","handleInputChange","event","name","value","target","handleLogin","console","log","response","fetch","method","headers","body","JSON","stringify","status","data","json","authToken","error","message","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SiDR/WebstormProjects/spam-app/spam-filter/src/components/AuthForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ninterface AuthFormProps {\r\n    onLogin: (userData: { username: string; password: string }, token: string) => void;\r\n}\r\nconst LoginForm: React.FC<LoginFormProps> = ({ onLogin }) => {\r\n    const [userData, setUserData] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        setUserData({ ...userData, [name]: value });\r\n    };\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            console.log('Sending login request with user data:', userData);\r\n\r\n            const response = await fetch('http://localhost:3001/api/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userData)\r\n            });\r\n\r\n            console.log('Response status:', response.status);\r\n\r\n            const data = await response.json();\r\n            console.log('Response data:', data);\r\n\r\n            const authToken = data.authToken;\r\n            console.log('Received authToken:', authToken);\r\n\r\n            if (onLogin) {\r\n                console.log('Calling onLogin handler with authToken:', authToken);\r\n                onLogin(authToken);\r\n            }\r\n        } catch (error: any) {\r\n            console.error('Authentication error:', (error as Error).message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>\r\n                username:\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={userData.username}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </label>\r\n            <label>\r\n                Password:\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={userData.password}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </label>\r\n            <button onClick={handleLogin}>Login</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}