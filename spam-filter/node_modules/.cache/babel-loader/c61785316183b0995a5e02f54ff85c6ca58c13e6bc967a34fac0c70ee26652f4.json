{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\Desktop\\\\spam-filter\\\\spam-filter\\\\src\\\\components\\\\ChatRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport RegistrationForm from \"./RegistrationForm\";\nimport { Button, Paper, TextField, Typography } from \"@mui/material\";\nimport styles from '../styles/Home.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const classes = styles;\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  const [name, setName] = useState('');\n  const socket = io('http://localhost:3001', {\n    transports: ['websocket'],\n    reconnection: true,\n    reconnectionAttempts: 3\n  });\n  useEffect(() => {\n    loginUser();\n  }, []);\n  const loginUser = async () => {\n    try {\n      const users = await fetch('/api/users').then(response => response.json());\n      console.log('List of users:', users);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const handleRegister = useCallback(userData => {\n    axios.post('http://localhost:3001/api/register', userData).then(response => {\n      const newUser = response.data.message;\n      console.log('New user:', newUser);\n      setCurrentUser(newUser);\n      const {\n        name\n      } = newUser || {};\n      setName(name);\n      console.log(`Welcome, ${name}!`);\n    }).catch(error => {\n      console.error('Error creating user:', error);\n    });\n  }, [setCurrentUser, setName]);\n  const handleLoginSuccess = useCallback(authToken => {\n    axios.get('http://localhost:3001/api/user', {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      setCurrentUser(response.data.user); // Update current user state\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n    });\n  }, [setCurrentUser]);\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) {\n      console.warn('Message text is empty');\n      return;\n    }\n    if (currentUser) {\n      axios.post('http://localhost:3001/api/messages', {\n        text: newMessage,\n        username: currentUser.nickname\n      }).then(response => {\n        setMessages(prevMessages => [...prevMessages, response.data]);\n        setNewMessage('');\n      }).catch(error => {\n        console.error('Error sending message:', error);\n        alert('Failed to send message. Please try again later.');\n      });\n    } else {\n      alert('You need to log in first.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: classes.welcomeMessage,\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), !currentUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RegistrationForm, {\n        onRegister: userData => handleRegister({\n          username: userData.name,\n          email: userData.nickname,\n          password: userData.password\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this), currentUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        children: [\"Welcome, \", currentUser.id, \" (\", currentUser.nickname, \")!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.messageList,\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.messageItem,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.username, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this), message.text]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: authToken => handleLoginSuccess(authToken)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"071H553MPyfKtPsBwMSz5/NG03o=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","io","RegistrationForm","Button","Paper","TextField","Typography","styles","jsxDEV","_jsxDEV","ChatRoom","_s","classes","messages","setMessages","newMessage","setNewMessage","currentUser","setCurrentUser","name","setName","socket","transports","reconnection","reconnectionAttempts","loginUser","users","fetch","then","response","json","console","log","error","handleRegister","userData","post","newUser","data","message","catch","handleLoginSuccess","authToken","get","headers","Authorization","user","handleSendMessage","trim","warn","text","username","nickname","prevMessages","alert","className","root","elevation","children","variant","welcomeMessage","fileName","_jsxFileName","lineNumber","columnNumber","onRegister","email","password","paragraph","id","messageList","map","messageItem","inputContainer","input","type","placeholder","value","onChange","e","target","color","onClick","LoginForm","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/Пользователь/Desktop/spam-filter/spam-filter/src/components/ChatRoom.tsx"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport RegistrationForm from \"./RegistrationForm\";\r\nimport {Button,Paper, TextField, Theme, Typography} from \"@mui/material\";\r\nimport styles from '../styles/Home.module.css'\r\n\r\n\r\n\r\ninterface Message {\r\n    id: number;\r\n    text: string;\r\n    username: string;\r\n}\r\n\r\ninterface User {\r\n    id: number;\r\n    name: string;\r\n    nickname: string;\r\n}\r\n\r\n\r\nconst ChatRoom: React.FC = () => {\r\n    const classes = styles;\r\n\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [newMessage, setNewMessage] = useState<string>('');\r\n    const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n    const [name, setName] = useState<string>('');\r\n    const socket = io('http://localhost:3001', {\r\n        transports: ['websocket'],\r\n        reconnection: true,\r\n        reconnectionAttempts: 3,\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        loginUser();\r\n    }, []);\r\n\r\n\r\n    const loginUser = async () => {\r\n        try {\r\n            const users = await fetch('/api/users').then((response) => response.json());\r\n            console.log('List of users:', users);\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleRegister = useCallback((userData: { username: string; email: string; password: string }) => {\r\n        axios\r\n            .post('http://localhost:3001/api/register', userData)\r\n            .then((response) => {\r\n                const newUser = response.data.message;\r\n                console.log('New user:', newUser);\r\n                setCurrentUser(newUser);\r\n                const { name } = newUser || {};\r\n                setName(name);\r\n\r\n\r\n                console.log(`Welcome, ${name}!`);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error creating user:', error);\r\n            });\r\n    }, [setCurrentUser, setName]);\r\n\r\n\r\n    const handleLoginSuccess = useCallback((authToken: string) => {\r\n\r\n        axios.get('http://localhost:3001/api/user', {\r\n            headers: {\r\n                Authorization: `Bearer ${authToken}`\r\n            }\r\n        }).then(response => {\r\n            setCurrentUser(response.data.user); // Update current user state\r\n        }).catch(error => {\r\n            console.error('Error fetching user data:', error);\r\n        });\r\n    }, [setCurrentUser]);\r\n\r\n\r\n\r\n    const handleSendMessage = () => {\r\n        if (!newMessage.trim()) {\r\n            console.warn('Message text is empty');\r\n            return;\r\n        }\r\n\r\n        if (currentUser) {\r\n            axios.post('http://localhost:3001/api/messages', { text: newMessage, username: currentUser.nickname })\r\n                .then(response => {\r\n                    setMessages((prevMessages) => [...prevMessages, response.data]);\r\n                    setNewMessage('');\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error sending message:', error);\r\n                    alert('Failed to send message. Please try again later.');\r\n                });\r\n        } else {\r\n            alert('You need to log in first.');\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Paper className={classes.root} elevation={3}>\r\n            <Typography variant=\"h5\" className={classes.welcomeMessage}>\r\n                Chat Room\r\n            </Typography>\r\n\r\n            {!currentUser && (\r\n                <div>\r\n                    <RegistrationForm\r\n                        onRegister={(userData) => handleRegister({\r\n                            username: userData.name,\r\n                            email: userData.nickname,\r\n                            password: userData.password\r\n                        })}\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n            {currentUser && (\r\n                <div>\r\n                    <Typography variant=\"body1\" paragraph>\r\n                        Welcome, {currentUser.id} ({currentUser.nickname})!\r\n                    </Typography>\r\n\r\n                    <ul className={classes.messageList}>\r\n                        {messages.map((message) => (\r\n                            <li key={message.id} className={classes.messageItem}>\r\n                                <strong>{message.username}: </strong>\r\n                                {message.text}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <div className={classes.inputContainer}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            type=\"text\"\r\n                            placeholder=\"Type your message...\"\r\n                            value={newMessage}\r\n                            onChange={(e) => setNewMessage(e.target.value)}\r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleSendMessage}>\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <LoginForm onLogin={(authToken) => handleLoginSuccess(authToken)} />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}