{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SiDR\\\\WebstormProjects\\\\spam-app\\\\spam-filter\\\\src\\\\components\\\\ChatRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const socket = io('http://localhost:3001', {\n    transports: ['websocket']\n  });\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/messages').then(response => setMessages(response.data)).catch(error => console.error('Error fetching initial messages:', error));\n    socket.on('newMessage', newMessage => {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n  const handleSendMessage = () => {\n    axios.post('http://localhost:3001/api/messages', {\n      text: newMessage\n    }).then(response => {\n      setMessages(prevMessages => [...prevMessages, response.data]);\n      setNewMessage('');\n    }).catch(error => console.error('Error sending message:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.username, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), message.text]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","jsxDEV","_jsxDEV","ChatRoom","_s","messages","setMessages","newMessage","setNewMessage","socket","transports","get","then","response","data","catch","error","console","on","prevMessages","disconnect","handleSendMessage","post","text","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","username","id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SiDR/WebstormProjects/spam-app/spam-filter/src/components/ChatRoom.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\ninterface Message {\r\n    id: number;\r\n    text: string;\r\n    username: string;\r\n}\r\n\r\n\r\nconst ChatRoom: React.FC = () => {\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [newMessage, setNewMessage] = useState<string>('');\r\n    const socket = io('http://localhost:3001', { transports: ['websocket'] });\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/api/messages')\r\n            .then(response => setMessages(response.data))\r\n            .catch(error => console.error('Error fetching initial messages:', error));\r\n\r\n        socket.on('newMessage', (newMessage) => {\r\n            setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, [socket]);\r\n\r\n    const handleSendMessage = () => {\r\n        axios.post('http://localhost:3001/api/messages', { text: newMessage })\r\n            .then(response => {\r\n                setMessages((prevMessages) => [...prevMessages, response.data]);\r\n                setNewMessage('');\r\n            })\r\n            .catch(error => console.error('Error sending message:', error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Chat Room</h2>\r\n            <ul>\r\n                {messages.map(message => (\r\n                    <li key={message.id}>\r\n                        <strong>{message.username}: </strong>\r\n                        {message.text}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                />\r\n                <button onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}