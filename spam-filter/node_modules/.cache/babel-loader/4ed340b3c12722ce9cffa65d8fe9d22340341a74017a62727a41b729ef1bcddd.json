{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SiDR\\\\WebstormProjects\\\\spam-app\\\\spam-filter\\\\src\\\\components\\\\ChatRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  const socket = io('http://localhost:3001', {\n    transports: ['websocket']\n  });\n  useEffect(() => {\n    const name = prompt('Enter your name:');\n    const nickname = prompt('Enter your nickname:');\n    if (name && nickname) {\n      const user = {\n        id: Date.now(),\n        name,\n        nickname\n      };\n      setCurrentUser(user);\n    } else {\n      alert('Please enter valid name and nickname.');\n    }\n  }, []);\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/messages').then(response => setMessages(response.data)).catch(error => console.error('Error fetching initial messages:', error));\n    socket.on('newMessage', newMessage => {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socket]);\n  const loginUser = async () => {\n    const users = await fetch('/api/users').then(response => response.json());\n    console.log('List of users:', users);\n  };\n  const sendMessage = message => {\n    socket.emit('sendMessage', {\n      text: message\n    });\n  };\n  socket.on('newMessage', message => {\n    console.log('New message:', message);\n  });\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) {\n      console.warn('Message text is empty');\n      return;\n    }\n    if (currentUser) {\n      axios.post('http://localhost:3001/api/messages', {\n        text: newMessage,\n        username: currentUser.nickname\n      }).then(response => {\n        setMessages(prevMessages => [...prevMessages, response.data]);\n        setNewMessage('');\n      }).catch(error => console.error('Error sending message:', error));\n    } else {\n      alert('You need to log in first.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), currentUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", currentUser.name, \" (\", currentUser.nickname, \")!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.username, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), message.text]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"Ztdu4VNYP1fNkKnJJ/FYUMllDhU=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","jsxDEV","_jsxDEV","ChatRoom","_s","messages","setMessages","newMessage","setNewMessage","currentUser","setCurrentUser","socket","transports","name","prompt","nickname","user","id","Date","now","alert","get","then","response","data","catch","error","console","on","prevMessages","disconnect","loginUser","users","fetch","json","log","sendMessage","message","emit","text","handleSendMessage","trim","warn","post","username","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SiDR/WebstormProjects/spam-app/spam-filter/src/components/ChatRoom.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\ninterface Message {\r\n    id: number;\r\n    text: string;\r\n    username: string;\r\n}\r\n\r\ninterface User {\r\n    id: number;\r\n    name: string;\r\n    nickname: string;\r\n}\r\n\r\n\r\nconst ChatRoom: React.FC = () => {\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [newMessage, setNewMessage] = useState<string>('');\r\n    const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n    const socket = io('http://localhost:3001', { transports: ['websocket'] });\r\n\r\n    useEffect(() => {\r\n        const name = prompt('Enter your name:');\r\n        const nickname = prompt('Enter your nickname:');\r\n\r\n        if (name && nickname) {\r\n            const user: User = { id: Date.now(), name, nickname };\r\n            setCurrentUser(user);\r\n        } else {\r\n            alert('Please enter valid name and nickname.');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/api/messages')\r\n            .then(response => setMessages(response.data))\r\n            .catch(error => console.error('Error fetching initial messages:', error));\r\n\r\n        socket.on('newMessage', (newMessage) => {\r\n            setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, [socket]);\r\n\r\n    const loginUser = async () => {\r\n\r\n        const users = await fetch('/api/users').then((response) => response.json());\r\n        console.log('List of users:', users);\r\n\r\n    };\r\n\r\n\r\n    const sendMessage = (message: any) => {\r\n        socket.emit('sendMessage', { text: message });\r\n    };\r\n\r\n\r\n    socket.on('newMessage', (message) => {\r\n        console.log('New message:', message);\r\n\r\n    });\r\n\r\n    const handleSendMessage = () => {\r\n        if (!newMessage.trim()) {\r\n            console.warn('Message text is empty');\r\n            return;\r\n        }\r\n\r\n        if (currentUser) {\r\n            axios.post('http://localhost:3001/api/messages', { text: newMessage, username: currentUser.nickname })\r\n                .then(response => {\r\n                    setMessages((prevMessages) => [...prevMessages, response.data]);\r\n                    setNewMessage('');\r\n                })\r\n                .catch(error => console.error('Error sending message:', error));\r\n        } else {\r\n            alert('You need to log in first.');\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2>Chat Room</h2>\r\n            {currentUser && (\r\n                <div>\r\n                    <p>Welcome, {currentUser.name} ({currentUser.nickname})!</p>\r\n                </div>\r\n            )}\r\n            <ul>\r\n                {messages.map(message => (\r\n                    <li key={message.id}>\r\n                        <strong>{message.username}: </strong>\r\n                        {message.text}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                />\r\n                <button onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}