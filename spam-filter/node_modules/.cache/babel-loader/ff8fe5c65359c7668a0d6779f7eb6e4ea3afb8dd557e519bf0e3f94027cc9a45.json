{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SiDR\\\\WebstormProjects\\\\spam-app\\\\spam-filter\\\\src\\\\components\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, TextField, Typography, Snackbar, Alert } from '@mui/material';\nimport styles from '../styles/Home.module.css';\nimport axios from 'axios';\nimport Filter from 'bad-words';\nimport rusBadWords from '../rusbadwords.json';\nimport Stickers from \"./Stickers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  currentUser,\n  username\n}) => {\n  _s();\n  const classes = styles;\n  const [messages, setMessages] = useState([]);\n  const [selectedSticker, setSelectedSticker] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [rateLimitMessage, setRateLimitMessage] = useState('');\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const filter = new Filter();\n  const rusFilter = new Set(rusBadWords);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/messages');\n        const storedMessages = response.data;\n        setMessages(storedMessages);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [messages]);\n  useEffect(() => {\n    return () => {\n      localStorage.setItem('chatMessages', JSON.stringify(messages));\n    };\n  }, [messages]);\n  const handleStickerSelect = sticker => {\n    setSelectedSticker(sticker.url);\n  };\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() && !selectedSticker) {\n      console.warn('Message text is empty and no sticker is selected');\n      return;\n    }\n    let messageToSend = newMessage.trim();\n    if (selectedSticker) {\n      messageToSend += ` ${selectedSticker}`;\n    }\n    if (currentUser) {\n      try {\n        const response = await axios.post('http://localhost:3001/api/messages', {\n          text: messageToSend,\n          userId: currentUser.id,\n          username\n        });\n        const newMessageObj = response.data;\n        setMessages(prevMessages => [...prevMessages, newMessageObj]);\n        setNewMessage('');\n        setSelectedSticker(null);\n      } catch (error) {\n        if (error.response && error.response.status === 429) {\n          setRateLimitMessage(error.response.data.message);\n          setOpenSnackbar(true);\n        } else {\n          console.error('Error sending message:', error);\n        }\n      }\n    } else {\n      alert('You need to log in first.');\n    }\n  };\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.chatContainer,\n    style: {\n      backgroundColor: '#f3f3f3',\n      color: '#333'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      paragraph: true,\n      className: classes.welcomeMessage,\n      children: [\"Welcome, \", currentUser.username, \" (\", currentUser.id, \")!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.messageList,\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${classes.messageItem} ${message.username === username ? classes.ownMessage : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.messageContent,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.username, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), message.text.trim().startsWith('/static/media/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.text,\n            alt: \"Sticker\",\n            className: classes.stickerImage,\n            width: \"30\",\n            height: \"30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this) : message.text.split(' ').map((part, index) => part.startsWith('/static/media/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: part,\n            alt: \"Sticker\",\n            className: classes.stickerImage,\n            width: \"30\",\n            height: \"30\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: part.split(':').map((subPart, subIndex) => subIndex % 2 === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: subPart\n            }, subIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `smiley-${subPart}.png`,\n              alt: `Smiley ${subPart}`\n            }, subIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 53\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 41\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), message.username === username && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"error\",\n          onClick: () => handleDeleteMessage(message._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        style: {\n          backgroundColor: '#fff',\n          color: '#333'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stickers, {\n        onStickerSelect: handleStickerSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSendMessage,\n        className: classes.sendButton,\n        style: {\n          backgroundColor: '#2196F3'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"warning\",\n        sx: {\n          width: '100%'\n        },\n        children: rateLimitMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"gla6zJSpuc5vDAfZoPzDTtjj8yM=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","Button","TextField","Typography","Snackbar","Alert","styles","axios","Filter","rusBadWords","Stickers","jsxDEV","_jsxDEV","Chat","currentUser","username","_s","classes","messages","setMessages","selectedSticker","setSelectedSticker","newMessage","setNewMessage","rateLimitMessage","setRateLimitMessage","openSnackbar","setOpenSnackbar","filter","rusFilter","Set","fetchMessages","response","get","storedMessages","data","error","console","localStorage","setItem","JSON","stringify","handleStickerSelect","sticker","url","handleSendMessage","trim","warn","messageToSend","post","text","userId","id","newMessageObj","prevMessages","status","message","alert","handleCloseSnackbar","className","chatContainer","style","backgroundColor","color","children","variant","paragraph","welcomeMessage","fileName","_jsxFileName","lineNumber","columnNumber","messageList","map","messageItem","ownMessage","messageContent","startsWith","src","alt","stickerImage","width","height","split","part","index","Fragment","subPart","subIndex","onClick","handleDeleteMessage","_id","inputContainer","input","type","placeholder","value","onChange","e","target","onStickerSelect","sendButton","open","autoHideDuration","onClose","severity","sx","_c","$RefreshReg$"],"sources":["C:/Users/SiDR/WebstormProjects/spam-app/spam-filter/src/components/Chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, TextField, Typography, Snackbar, Alert } from '@mui/material';\r\nimport styles from '../styles/Home.module.css';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Filter from 'bad-words';\r\nimport rusBadWords from '../rusbadwords.json';\r\nimport Stickers from \"./Stickers\";\r\n\r\ninterface Message {\r\n    _id: string;\r\n    text: string;\r\n    username: string;\r\n}\r\n\r\ninterface User {\r\n    id: number;\r\n    username: string;\r\n    nickname: string;\r\n}\r\n\r\ninterface ChatProps {\r\n    currentUser: User;\r\n    username: string;\r\n}\r\n\r\ninterface Sticker {\r\n    url: string;\r\n    name: string;\r\n}\r\n\r\nconst Chat: React.FC<ChatProps> = ({ currentUser, username }) => {\r\n    const classes = styles;\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [selectedSticker, setSelectedSticker] = useState<string | null>(null);\r\n    const [newMessage, setNewMessage] = useState<string>('');\r\n    const [rateLimitMessage, setRateLimitMessage] = useState<string>('');\r\n    const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n    const filter = new Filter();\r\n    const rusFilter = new Set(rusBadWords);\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/api/messages');\r\n                const storedMessages = response.data;\r\n                setMessages(storedMessages);\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            localStorage.setItem('chatMessages', JSON.stringify(messages));\r\n        };\r\n    }, [messages]);\r\n\r\n    const handleStickerSelect = (sticker: Sticker) => {\r\n        setSelectedSticker(sticker.url);\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!newMessage.trim() && !selectedSticker) {\r\n            console.warn('Message text is empty and no sticker is selected');\r\n            return;\r\n        }\r\n        let messageToSend = newMessage.trim();\r\n\r\n        if (selectedSticker) {\r\n            messageToSend += ` ${selectedSticker}`;\r\n        }\r\n\r\n        if (currentUser) {\r\n            try {\r\n                const response = await axios.post('http://localhost:3001/api/messages', { text: messageToSend, userId: currentUser.id, username });\r\n                const newMessageObj: Message = response.data;\r\n                setMessages(prevMessages => [...prevMessages, newMessageObj]);\r\n                setNewMessage('');\r\n                setSelectedSticker(null);\r\n            } catch (error) {\r\n                if (error.response && error.response.status === 429) {\r\n                    setRateLimitMessage(error.response.data.message);\r\n                    setOpenSnackbar(true);\r\n                } else {\r\n                    console.error('Error sending message:', error);\r\n                }\r\n            }\r\n        } else {\r\n            alert('You need to log in first.');\r\n        }\r\n    };\r\n\r\n    const handleCloseSnackbar = () => {\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.chatContainer} style={{ backgroundColor: '#f3f3f3', color: '#333' }}>\r\n            <Typography variant=\"body1\" paragraph className={classes.welcomeMessage}>\r\n                Welcome, {currentUser.username} ({currentUser.id})!\r\n            </Typography>\r\n\r\n            <ul className={classes.messageList}>\r\n                {messages.map(message => (\r\n                    <li key={message._id} className={`${classes.messageItem} ${message.username === username ? classes.ownMessage : ''}`}>\r\n                        <div className={classes.messageContent}>\r\n                            <strong>{message.username}: </strong>\r\n                            {message.text.trim().startsWith('/static/media/') ? (\r\n                                <img src={message.text} alt=\"Sticker\" className={classes.stickerImage} width=\"30\" height=\"30\" />\r\n                            ) : (\r\n                                message.text.split(' ').map((part, index) => (\r\n                                    part.startsWith('/static/media/') ? (\r\n                                        <img key={index} src={part} alt=\"Sticker\" className={classes.stickerImage} width=\"30\" height=\"30\" />\r\n                                    ) : (\r\n                                        <React.Fragment key={index}>\r\n                                            {part.split(':').map((subPart, subIndex) => (\r\n                                                subIndex % 2 === 0 ? (\r\n                                                    <span key={subIndex}>{subPart}</span>\r\n                                                ) : (\r\n                                                    <img key={subIndex} src={`smiley-${subPart}.png`} alt={`Smiley ${subPart}`} />\r\n                                                )\r\n                                            ))}\r\n                                        </React.Fragment>\r\n                                    )\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                        {message.username === username && (\r\n                            <Button variant=\"outlined\" color=\"error\" onClick={() => handleDeleteMessage(message._id)}>\r\n                                Delete\r\n                            </Button>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <div className={classes.inputContainer}>\r\n                <TextField\r\n                    className={classes.input}\r\n                    type=\"text\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={newMessage}\r\n                    onChange={e => setNewMessage(e.target.value)}\r\n                    style={{ backgroundColor: '#fff', color: '#333' }}\r\n                />\r\n                <Stickers onStickerSelect={handleStickerSelect} />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSendMessage} className={classes.sendButton} style={{ backgroundColor: '#2196F3' }}>\r\n                    Send\r\n                </Button>\r\n            </div>\r\n\r\n            <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n                <Alert onClose={handleCloseSnackbar} severity=\"warning\" sx={{ width: '100%' }}>\r\n                    {rateLimitMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}