{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\\\\OneDrive\\\\Desktop\\\\spam-filter\\\\spam-filter\\\\src\\\\components\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, TextField, Typography } from '@mui/material';\nimport styles from '../styles/Home.module.css';\nimport axios from 'axios';\nimport Filter from 'bad-words';\nimport rusBadWords from '../rusbadwords.json';\nimport Stickers from \"./Stickers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  currentUser,\n  username\n}) => {\n  _s();\n  const classes = styles;\n  const [messages, setMessages] = useState([]);\n  const [selectedSticker, setSelectedSticker] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const filter = new Filter();\n  const rusFilter = new Set(rusBadWords);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/messages');\n        const storedMessages = response.data;\n        setMessages(storedMessages);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [messages]);\n  useEffect(() => {\n    return () => {\n      localStorage.setItem('chatMessages', JSON.stringify(messages));\n    };\n  }, [messages]);\n  const handleStickerSelect = sticker => {\n    setSelectedSticker(sticker.url);\n  };\n  const isValidImageUrl = url => {\n    return /\\.(jpeg|jpg|gif|png)$/.test(url);\n  };\n  const addToBlacklist = async (username, reason) => {\n    try {\n      const authToken = localStorage.getItem('authToken');\n      await axios.post('http://localhost:3001/api/blacklist', {\n        username,\n        reason\n      }, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      console.log(`User ${username} added to blacklist for reason: ${reason}`);\n    } catch (error) {\n      console.error('Error adding user to blacklist:', error);\n    }\n  };\n  const handleSendMessage = () => {\n    if (!newMessage.trim() && !selectedSticker) {\n      console.warn('Message text is empty and no sticker is selected');\n      return;\n    }\n    let messageToSend = newMessage.trim();\n    if (selectedSticker) {\n      messageToSend += ` ${selectedSticker}`;\n    }\n    if (currentUser) {\n      const profaneWordCount = countProfaneWords(messageToSend);\n      // const profaneWordCount = countProfaneWords(newMessage);\n      if (profaneWordCount > 2) {\n        addToBlacklist(currentUser.username, 'Excessive profanity');\n        alert('Excessive profanity detected. Your message cannot be sent.');\n        return;\n      }\n      const censoredMessage = censorMessage(messageToSend);\n      // const censoredMessage = censorMessage(newMessage);\n\n      axios.post('http://localhost:3001/api/messages', {\n        text: censoredMessage,\n        userId: currentUser.id,\n        username\n      }).then(response => {\n        const newMessageObj = response.data;\n        setMessages(prevMessages => [...prevMessages, newMessageObj]);\n        setNewMessage('');\n        setSelectedSticker(null);\n      }).catch(error => {\n        console.error('Error sending message:', error);\n      });\n    } else {\n      alert('You need to log in first.');\n    }\n  };\n  let profaneCount = 0;\n  const countProfaneWords = message => {\n    const words = message.split(/\\s+/);\n    let profaneCount = 0;\n    words.forEach(word => {\n      if (filter.isProfane(word) || rusFilter.has(word.toLowerCase())) {\n        console.log(`Processing word: ${word}`);\n        console.log(`Profane word detected: ${word}`);\n        profaneCount++;\n        console.log(`Total profane word count: ${profaneCount}`);\n      }\n    });\n    return profaneCount;\n  };\n  const handleDeleteMessage = async messageId => {\n    console.log(\"Deleting message with ID:\", messageId);\n    const authToken = localStorage.getItem('authToken');\n    try {\n      await axios.delete(`http://localhost:3001/api/messages/${messageId}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setMessages(prevMessages => prevMessages.filter(message => message._id !== messageId));\n    } catch (error) {\n      console.error('Error deleting message:', error);\n      alert('Failed to delete message. Please try again later.');\n    }\n  };\n  const censorMessage = message => {\n    return message.split(/\\s+/).map(word => {\n      if (filter.isProfane(word) || rusFilter.has(word.toLowerCase())) {\n        addToBlacklist(currentUser.username, 'inappropriate words');\n        return '*'.repeat(word.length);\n      } else {\n        return word;\n      }\n    }).join(' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      paragraph: true,\n      className: classes.welcomeMessage,\n      children: [\"Welcome, \", currentUser.username, \" (\", currentUser.id, \")!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.messageList,\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.messageItem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.messageContent,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.username, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 30\n          }, this), message.text.trim().startsWith('/static/media/') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: message.text,\n              alt: \"Sticker\",\n              className: classes.stickerImage,\n              width: \"30\",\n              height: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.text.split(' ').slice(1).join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: message.text.split(':').map((part, index) => index % 2 === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: part\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `smiley-${part}.png`,\n              alt: `Smiley ${part}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), message.username === username && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"error\",\n          onClick: () => handleDeleteMessage(message._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stickers, {\n        onStickerSelect: handleStickerSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSendMessage,\n        className: classes.sendButton,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"D4qKRsbHMYAe41axWhR/e5YKc8Q=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","Button","TextField","Typography","styles","axios","Filter","rusBadWords","Stickers","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","currentUser","username","_s","classes","messages","setMessages","selectedSticker","setSelectedSticker","newMessage","setNewMessage","filter","rusFilter","Set","fetchMessages","response","get","storedMessages","data","error","console","localStorage","setItem","JSON","stringify","handleStickerSelect","sticker","url","isValidImageUrl","test","addToBlacklist","reason","authToken","getItem","post","headers","Authorization","log","handleSendMessage","trim","warn","messageToSend","profaneWordCount","countProfaneWords","alert","censoredMessage","censorMessage","text","userId","id","then","newMessageObj","prevMessages","catch","profaneCount","message","words","split","forEach","word","isProfane","has","toLowerCase","handleDeleteMessage","messageId","delete","_id","map","repeat","length","join","className","chatContainer","children","variant","paragraph","welcomeMessage","fileName","_jsxFileName","lineNumber","columnNumber","messageList","messageItem","messageContent","startsWith","src","alt","stickerImage","width","height","slice","part","index","color","onClick","inputContainer","input","type","placeholder","value","onChange","e","target","onStickerSelect","sendButton","_c","$RefreshReg$"],"sources":["C:/Users/Пользователь/OneDrive/Desktop/spam-filter/spam-filter/src/components/Chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, TextField, Typography } from '@mui/material';\r\nimport styles from '../styles/Home.module.css';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Filter from 'bad-words';\r\nimport rusBadWords from '../rusbadwords.json';\r\nimport Stickers from \"./Stickers\";\r\n\r\ninterface Message {\r\n    _id: string;\r\n    text: string;\r\n    username: string;\r\n}\r\n\r\ninterface User {\r\n    id: number;\r\n    username: string;\r\n    nickname: string;\r\n}\r\n\r\ninterface ChatProps {\r\n    currentUser: User;\r\n    username: string;\r\n}\r\n\r\nconst Chat: React.FC<ChatProps> = ({ currentUser, username }) => {\r\n    const classes = styles;\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [selectedSticker, setSelectedSticker] = useState<string | null>(null);\r\n    const [newMessage, setNewMessage] = useState<string>('');\r\n    const filter = new Filter();\r\n    const rusFilter = new Set(rusBadWords);\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/api/messages');\r\n                const storedMessages = response.data;\r\n                setMessages(storedMessages);\r\n            } catch (error) {\r\n                console.error('Error fetching messages:', error);\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n                localStorage.setItem('chatMessages', JSON.stringify(messages));\r\n        };\r\n    }, [messages]);\r\n\r\n    const handleStickerSelect = (sticker: StickerPicke) => {\r\n        setSelectedSticker(sticker.url);\r\n    };\r\n\r\n\r\n    const isValidImageUrl = (url: string) => {\r\n        return /\\.(jpeg|jpg|gif|png)$/.test(url);\r\n    };\r\n\r\n\r\n    const addToBlacklist = async (username: string, reason: string) => {\r\n        try {\r\n            const authToken = localStorage.getItem('authToken');\r\n            await axios.post('http://localhost:3001/api/blacklist', { username, reason }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${authToken}`\r\n                }\r\n            });\r\n            console.log(`User ${username} added to blacklist for reason: ${reason}`);\r\n        } catch (error) {\r\n            console.error('Error adding user to blacklist:', error);\r\n        }\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        if (!newMessage.trim() && !selectedSticker) {\r\n            console.warn('Message text is empty and no sticker is selected');\r\n            return;\r\n        }\r\n        let messageToSend = newMessage.trim();\r\n\r\n        if (selectedSticker) {\r\n            messageToSend += ` ${selectedSticker}`;\r\n        }\r\n\r\n\r\n        if (currentUser) {\r\n            const profaneWordCount = countProfaneWords(messageToSend);\r\n            // const profaneWordCount = countProfaneWords(newMessage);\r\n            if (profaneWordCount > 2) {\r\n                addToBlacklist(currentUser.username, 'Excessive profanity');\r\n                alert('Excessive profanity detected. Your message cannot be sent.');\r\n                return;\r\n            }\r\n            const censoredMessage = censorMessage(messageToSend);\r\n            // const censoredMessage = censorMessage(newMessage);\r\n\r\n            axios.post('http://localhost:3001/api/messages', { text: censoredMessage, userId: currentUser.id, username })\r\n                .then(response => {\r\n                    const newMessageObj: Message = response.data;\r\n                    setMessages(prevMessages => [...prevMessages, newMessageObj]);\r\n                    setNewMessage('');\r\n                    setSelectedSticker(null);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error sending message:', error);\r\n                });\r\n        } else {\r\n            alert('You need to log in first.');\r\n        }\r\n    };\r\n\r\n    let profaneCount = 0;\r\n    const countProfaneWords = (message: string): number => {\r\n        const words = message.split(/\\s+/);\r\n        let profaneCount = 0;\r\n\r\n        words.forEach(word => {\r\n            if (filter.isProfane(word) || rusFilter.has(word.toLowerCase())) {\r\n                console.log(`Processing word: ${word}`);\r\n                console.log(`Profane word detected: ${word}`);\r\n                profaneCount++;\r\n                console.log(`Total profane word count: ${profaneCount}`);\r\n            }\r\n        });\r\n\r\n        return profaneCount;\r\n    };\r\n\r\n\r\n    const handleDeleteMessage = async (messageId: string) => {\r\n        console.log(\"Deleting message with ID:\", messageId);\r\n        const authToken = localStorage.getItem('authToken');\r\n\r\n        try {\r\n            await axios.delete(`http://localhost:3001/api/messages/${messageId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${authToken}`\r\n                }\r\n            });\r\n\r\n            setMessages(prevMessages => prevMessages.filter(message => message._id !== messageId));\r\n        } catch (error) {\r\n            console.error('Error deleting message:', error);\r\n            alert('Failed to delete message. Please try again later.');\r\n        }\r\n    };\r\n\r\n    const censorMessage = (message: string) => {\r\n        return message\r\n            .split(/\\s+/)\r\n            .map(word => {\r\n                if (filter.isProfane(word) || rusFilter.has(word.toLowerCase())) {\r\n                    addToBlacklist(currentUser.username, 'inappropriate words');\r\n                    return '*'.repeat(word.length);\r\n                } else {\r\n                    return word;\r\n                }\r\n            })\r\n            .join(' ');\r\n    };\r\n\r\n    return (\r\n        <div className={classes.chatContainer}>\r\n            <Typography variant=\"body1\" paragraph className={classes.welcomeMessage}>\r\n                Welcome, {currentUser.username} ({currentUser.id})!\r\n            </Typography>\r\n\r\n            <ul className={classes.messageList}>\r\n                {messages.map(message => (\r\n                    <li key={message._id} className={classes.messageItem}>\r\n                        <div className={classes.messageContent}>\r\n                             <strong>{message.username}: </strong>\r\n                                {message.text.trim().startsWith('/static/media/') ? (\r\n                                        <>\r\n                                    <img src={message.text} alt=\"Sticker\" className={classes.stickerImage} width=\"30\" height=\"30\" />\r\n                                    <p>{message.text.split(' ').slice(1).join(' ')}</p>\r\n                                </>\r\n                            ) : (\r\n                                <span>\r\n                    {message.text.split(':').map((part, index) => (\r\n                        index % 2 === 0 ? (\r\n                            <span key={index}>{part}</span>\r\n                        ) : (\r\n                            <img key={index} src={`smiley-${part}.png`} alt={`Smiley ${part}`} />\r\n                        )\r\n                    ))}\r\n                </span>\r\n                            )}\r\n                        </div>\r\n                        {message.username === username && (\r\n                            <Button variant=\"outlined\" color=\"error\" onClick={() => handleDeleteMessage(message._id)}>\r\n                                Delete\r\n                            </Button>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n\r\n            </ul>\r\n\r\n            <div className={classes.inputContainer}>\r\n                <TextField\r\n                    className={classes.input}\r\n                    type=\"text\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={newMessage}\r\n                    onChange={e => setNewMessage(e.target.value)}\r\n                />\r\n                <Stickers onStickerSelect={handleStickerSelect} />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSendMessage} className={classes.sendButton}>\r\n                    Send\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAC7D,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAmBlC,MAAMC,IAAyB,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAMC,OAAO,GAAGb,MAAM;EACtB,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAgB,IAAI,CAAC;EAC3E,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAMwB,MAAM,GAAG,IAAIlB,MAAM,CAAC,CAAC;EAC3B,MAAMmB,SAAS,GAAG,IAAIC,GAAG,CAACnB,WAAW,CAAC;EACtCR,SAAS,CAAC,MAAM;IACZ,MAAM4B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,oCAAoC,CAAC;QACtE,MAAMC,cAAc,GAAGF,QAAQ,CAACG,IAAI;QACpCZ,WAAW,CAACW,cAAc,CAAC;MAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDL,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEdnB,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACLmC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACnB,QAAQ,CAAC,CAAC;IACtE,CAAC;EACL,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMoB,mBAAmB,GAAIC,OAAqB,IAAK;IACnDlB,kBAAkB,CAACkB,OAAO,CAACC,GAAG,CAAC;EACnC,CAAC;EAGD,MAAMC,eAAe,GAAID,GAAW,IAAK;IACrC,OAAO,uBAAuB,CAACE,IAAI,CAACF,GAAG,CAAC;EAC5C,CAAC;EAGD,MAAMG,cAAc,GAAG,MAAAA,CAAO5B,QAAgB,EAAE6B,MAAc,KAAK;IAC/D,IAAI;MACA,MAAMC,SAAS,GAAGX,YAAY,CAACY,OAAO,CAAC,WAAW,CAAC;MACnD,MAAMzC,KAAK,CAAC0C,IAAI,CAAC,qCAAqC,EAAE;QAAEhC,QAAQ;QAAE6B;MAAO,CAAC,EAAE;QAC1EI,OAAO,EAAE;UACLC,aAAa,EAAG,UAASJ,SAAU;QACvC;MACJ,CAAC,CAAC;MACFZ,OAAO,CAACiB,GAAG,CAAE,QAAOnC,QAAS,mCAAkC6B,MAAO,EAAC,CAAC;IAC5E,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAC3D;EACJ,CAAC;EAED,MAAMmB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAAC7B,UAAU,CAAC8B,IAAI,CAAC,CAAC,IAAI,CAAChC,eAAe,EAAE;MACxCa,OAAO,CAACoB,IAAI,CAAC,kDAAkD,CAAC;MAChE;IACJ;IACA,IAAIC,aAAa,GAAGhC,UAAU,CAAC8B,IAAI,CAAC,CAAC;IAErC,IAAIhC,eAAe,EAAE;MACjBkC,aAAa,IAAK,IAAGlC,eAAgB,EAAC;IAC1C;IAGA,IAAIN,WAAW,EAAE;MACb,MAAMyC,gBAAgB,GAAGC,iBAAiB,CAACF,aAAa,CAAC;MACzD;MACA,IAAIC,gBAAgB,GAAG,CAAC,EAAE;QACtBZ,cAAc,CAAC7B,WAAW,CAACC,QAAQ,EAAE,qBAAqB,CAAC;QAC3D0C,KAAK,CAAC,4DAA4D,CAAC;QACnE;MACJ;MACA,MAAMC,eAAe,GAAGC,aAAa,CAACL,aAAa,CAAC;MACpD;;MAEAjD,KAAK,CAAC0C,IAAI,CAAC,oCAAoC,EAAE;QAAEa,IAAI,EAAEF,eAAe;QAAEG,MAAM,EAAE/C,WAAW,CAACgD,EAAE;QAAE/C;MAAS,CAAC,CAAC,CACxGgD,IAAI,CAACnC,QAAQ,IAAI;QACd,MAAMoC,aAAsB,GAAGpC,QAAQ,CAACG,IAAI;QAC5CZ,WAAW,CAAC8C,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAED,aAAa,CAAC,CAAC;QAC7DzC,aAAa,CAAC,EAAE,CAAC;QACjBF,kBAAkB,CAAC,IAAI,CAAC;MAC5B,CAAC,CAAC,CACD6C,KAAK,CAAClC,KAAK,IAAI;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACV,CAAC,MAAM;MACHyB,KAAK,CAAC,2BAA2B,CAAC;IACtC;EACJ,CAAC;EAED,IAAIU,YAAY,GAAG,CAAC;EACpB,MAAMX,iBAAiB,GAAIY,OAAe,IAAa;IACnD,MAAMC,KAAK,GAAGD,OAAO,CAACE,KAAK,CAAC,KAAK,CAAC;IAClC,IAAIH,YAAY,GAAG,CAAC;IAEpBE,KAAK,CAACE,OAAO,CAACC,IAAI,IAAI;MAClB,IAAIhD,MAAM,CAACiD,SAAS,CAACD,IAAI,CAAC,IAAI/C,SAAS,CAACiD,GAAG,CAACF,IAAI,CAACG,WAAW,CAAC,CAAC,CAAC,EAAE;QAC7D1C,OAAO,CAACiB,GAAG,CAAE,oBAAmBsB,IAAK,EAAC,CAAC;QACvCvC,OAAO,CAACiB,GAAG,CAAE,0BAAyBsB,IAAK,EAAC,CAAC;QAC7CL,YAAY,EAAE;QACdlC,OAAO,CAACiB,GAAG,CAAE,6BAA4BiB,YAAa,EAAC,CAAC;MAC5D;IACJ,CAAC,CAAC;IAEF,OAAOA,YAAY;EACvB,CAAC;EAGD,MAAMS,mBAAmB,GAAG,MAAOC,SAAiB,IAAK;IACrD5C,OAAO,CAACiB,GAAG,CAAC,2BAA2B,EAAE2B,SAAS,CAAC;IACnD,MAAMhC,SAAS,GAAGX,YAAY,CAACY,OAAO,CAAC,WAAW,CAAC;IAEnD,IAAI;MACA,MAAMzC,KAAK,CAACyE,MAAM,CAAE,sCAAqCD,SAAU,EAAC,EAAE;QAClE7B,OAAO,EAAE;UACLC,aAAa,EAAG,UAASJ,SAAU;QACvC;MACJ,CAAC,CAAC;MAEF1B,WAAW,CAAC8C,YAAY,IAAIA,YAAY,CAACzC,MAAM,CAAC4C,OAAO,IAAIA,OAAO,CAACW,GAAG,KAAKF,SAAS,CAAC,CAAC;IAC1F,CAAC,CAAC,OAAO7C,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CyB,KAAK,CAAC,mDAAmD,CAAC;IAC9D;EACJ,CAAC;EAED,MAAME,aAAa,GAAIS,OAAe,IAAK;IACvC,OAAOA,OAAO,CACTE,KAAK,CAAC,KAAK,CAAC,CACZU,GAAG,CAACR,IAAI,IAAI;MACT,IAAIhD,MAAM,CAACiD,SAAS,CAACD,IAAI,CAAC,IAAI/C,SAAS,CAACiD,GAAG,CAACF,IAAI,CAACG,WAAW,CAAC,CAAC,CAAC,EAAE;QAC7DhC,cAAc,CAAC7B,WAAW,CAACC,QAAQ,EAAE,qBAAqB,CAAC;QAC3D,OAAO,GAAG,CAACkE,MAAM,CAACT,IAAI,CAACU,MAAM,CAAC;MAClC,CAAC,MAAM;QACH,OAAOV,IAAI;MACf;IACJ,CAAC,CAAC,CACDW,IAAI,CAAC,GAAG,CAAC;EAClB,CAAC;EAED,oBACIzE,OAAA;IAAK0E,SAAS,EAAEnE,OAAO,CAACoE,aAAc;IAAAC,QAAA,gBAClC5E,OAAA,CAACP,UAAU;MAACoF,OAAO,EAAC,OAAO;MAACC,SAAS;MAACJ,SAAS,EAAEnE,OAAO,CAACwE,cAAe;MAAAH,QAAA,GAAC,WAC5D,EAACxE,WAAW,CAACC,QAAQ,EAAC,IAAE,EAACD,WAAW,CAACgD,EAAE,EAAC,IACrD;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbnF,OAAA;MAAI0E,SAAS,EAAEnE,OAAO,CAAC6E,WAAY;MAAAR,QAAA,EAC9BpE,QAAQ,CAAC8D,GAAG,CAACZ,OAAO,iBACjB1D,OAAA;QAAsB0E,SAAS,EAAEnE,OAAO,CAAC8E,WAAY;QAAAT,QAAA,gBACjD5E,OAAA;UAAK0E,SAAS,EAAEnE,OAAO,CAAC+E,cAAe;UAAAV,QAAA,gBAClC5E,OAAA;YAAA4E,QAAA,GAASlB,OAAO,CAACrD,QAAQ,EAAC,IAAE;UAAA;YAAA2E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACjCzB,OAAO,CAACR,IAAI,CAACR,IAAI,CAAC,CAAC,CAAC6C,UAAU,CAAC,gBAAgB,CAAC,gBACzCvF,OAAA,CAAAE,SAAA;YAAA0E,QAAA,gBACJ5E,OAAA;cAAKwF,GAAG,EAAE9B,OAAO,CAACR,IAAK;cAACuC,GAAG,EAAC,SAAS;cAACf,SAAS,EAAEnE,OAAO,CAACmF,YAAa;cAACC,KAAK,EAAC,IAAI;cAACC,MAAM,EAAC;YAAI;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAChGnF,OAAA;cAAA4E,QAAA,EAAIlB,OAAO,CAACR,IAAI,CAACU,KAAK,CAAC,GAAG,CAAC,CAACiC,KAAK,CAAC,CAAC,CAAC,CAACpB,IAAI,CAAC,GAAG;YAAC;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,eACrD,CAAC,gBAEHnF,OAAA;YAAA4E,QAAA,EACXlB,OAAO,CAACR,IAAI,CAACU,KAAK,CAAC,GAAG,CAAC,CAACU,GAAG,CAAC,CAACwB,IAAI,EAAEC,KAAK,KACrCA,KAAK,GAAG,CAAC,KAAK,CAAC,gBACX/F,OAAA;cAAA4E,QAAA,EAAmBkB;YAAI,GAAZC,KAAK;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC,gBAE/BnF,OAAA;cAAiBwF,GAAG,EAAG,UAASM,IAAK,MAAM;cAACL,GAAG,EAAG,UAASK,IAAK;YAAE,GAAxDC,KAAK;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAqD,CAE3E;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACO;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EACLzB,OAAO,CAACrD,QAAQ,KAAKA,QAAQ,iBAC1BL,OAAA,CAACT,MAAM;UAACsF,OAAO,EAAC,UAAU;UAACmB,KAAK,EAAC,OAAO;UAACC,OAAO,EAAEA,CAAA,KAAM/B,mBAAmB,CAACR,OAAO,CAACW,GAAG,CAAE;UAAAO,QAAA,EAAC;QAE1F;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACX;MAAA,GAxBIzB,OAAO,CAACW,GAAG;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAyBhB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CAAC,eAELnF,OAAA;MAAK0E,SAAS,EAAEnE,OAAO,CAAC2F,cAAe;MAAAtB,QAAA,gBACnC5E,OAAA,CAACR,SAAS;QACNkF,SAAS,EAAEnE,OAAO,CAAC4F,KAAM;QACzBC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAE1F,UAAW;QAClB2F,QAAQ,EAAEC,CAAC,IAAI3F,aAAa,CAAC2F,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFnF,OAAA,CAACF,QAAQ;QAAC4G,eAAe,EAAE9E;MAAoB;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDnF,OAAA,CAACT,MAAM;QAACsF,OAAO,EAAC,WAAW;QAACmB,KAAK,EAAC,SAAS;QAACC,OAAO,EAAExD,iBAAkB;QAACiC,SAAS,EAAEnE,OAAO,CAACoG,UAAW;QAAA/B,QAAA,EAAC;MAEvG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC7E,EAAA,CAhMIH,IAAyB;AAAAyG,EAAA,GAAzBzG,IAAyB;AAkM/B,eAAeA,IAAI;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}